; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[  ]
_global_script_class_icons={

}

[application]

config/name="Tetris"
config/description="Dies ist ein Übungsprojekt. Ich versuche die Dinge für mich traditionell anzugehen, also übliche Datenstrukturen zu verwenden und nur die grundlegenden Engine-Features wie Rendering und Loop-Mechanik zu nutzen."
run/main_scene="res://Screens/GameScreen.tscn"
config/icon="res://icon2.png"

[display]

window/size/width=1280
window/size/height=720
window/stretch/aspect="keep"

[editor_plugins]

enabled=PoolStringArray( "notes_tab" )

[input]

ui_rotate={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777237,"unicode":0,"echo":false,"script":null)
 ]
}
ui_rotate_alt={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777238,"unicode":0,"echo":false,"script":null)
 ]
}

[rendering]

quality/driver/driver_name="GLES2"
quality/intended_usage/framebuffer_allocation=0
quality/intended_usage/framebuffer_allocation.mobile=0
quality/2d/use_pixel_snap=true
vram_compression/import_etc=true
vram_compression/import_etc2=false
environment/default_environment="res://default_env.tres"
